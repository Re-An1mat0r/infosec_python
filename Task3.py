'''Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо
только числами. Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
работу скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами
выводится на экран.
Подсказка: для этого задания примем, что пользователь может вводить только числа и строки. Во время ввода пользователем
очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.'''


class NotANumberError(Exception):
    def __init__(self, message="Неверный формат данных. Введите число!"):
        self.message = message
        super().__init__(self.message)


def read_numbers():
    numbers = []
    while True:
        user_input = input('Введите число или stop для завершения: ')
        if user_input == 'stop':
            break
        try:
            number = int(user_input)
        except ValueError:
            try:
                number = float(user_input)
            except ValueError:
                raise NotANumberError()
        numbers.append(number)
    return numbers


try:
    numbers = read_numbers()
    print(numbers)
except NotANumberError as err:
    print(err)
